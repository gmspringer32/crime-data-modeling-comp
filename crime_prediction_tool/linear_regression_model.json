{"py/object": "sklearn.linear_model._base.LinearRegression", "py/state": {"fit_intercept": true, "copy_X": true, "n_jobs": null, "positive": false, "feature_names_in_": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [23]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["O8", false, true]}, {"py/tuple": [3, "|", null, null, null, -1, -1, 63]}]}, false, ["tempmax", "tempmin", "Day of Week Sin", "Day of Week Cos", "Clear", "Freezing Drizzle/Freezing Rain", "Ice", "Overcast", "Partially cloudy", "Rain", "Snow", "Columbus Day", "Halloween", "Independence Day", "Martin Luther King Jr. Day", "Memorial Day", "New Year's Day", "New Year's Eve", "Presidents' Day", "Valentine's Day", "Month Sin", "Month Cos", "Yesterday Total"]]}]}, "n_features_in_": 23, "coef_": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [15, 23]}, {"py/reduce": [{"py/type": "numpy.dtype"}, {"py/tuple": ["f8", false, true]}, {"py/tuple": [3, "<", null, null, null, -1, -1, 0]}]}, false, {"py/b64": "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"}]}]}, "rank_": 23, "singular_": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [23]}, {"py/id": 6}, false, {"py/b64": "FkckIODIkUBBq4kAmWp1QCHm3DwHdWVA9mGUAiNdSkDM2C1cQBVKQNrlrXwakkhA6C4//mztR0CslUQppldEQDgMSVEhkT9AZeyZsdxEMkB6weVcx3IxQP89Dr1tXgpAAUND2NsHBUC6hrT6ONwBQHJG0ZCzVvg/ai5qu5vewD/NdTZDgxy+PwurNbz2xL0/rvRv7IzouD9A6AP3wL+4P6WaCVa7Obc/XhdqH6itsz+ur7feyaazPw=="}]}]}, "intercept_": {"py/reduce": [{"py/function": "numpy.core.multiarray._reconstruct"}, {"py/tuple": [{"py/type": "numpy.ndarray"}, {"py/tuple": [0]}, {"py/b64": "Yg=="}]}, {"py/tuple": [1, {"py/tuple": [15]}, {"py/id": 6}, false, {"py/b64": "aGawbXVdbL/QPihePtECQOutLCpFtBFA6EfJBvh8mr/20X0OrUmWP9Tl/RZVQcs/fhb8H4q7fD9LlVw3KdtIP33OeL6f0ABAJE9dP/ytlr+6ZVb08zcLQL65CNh12QBAzMpwiRSn7D+Nq4dfYFYFQG+/kNNjJCJA"}]}]}, "_sklearn_version": "1.3.1"}}